def compute_rdc_scores(df: pd.DataFrame, embed_model="all-MiniLM-L6-v2") -> pd.DataFrame:
    """
    Computes Reasoning–Diagnosis Coherence (RDC):
    cosine similarity between each model’s reasoning trace
    and its own predicted diagnosis (not ground truth).
    """
    if df.empty:
        return df.assign(rdc_score=[])

    model = SentenceTransformer(embed_model)
    traces = df.get("reasoning_trace", [""] * len(df))
    preds  = df.get("diagnosis", [""] * len(df))

    e_trace = model.encode(traces, normalize_embeddings=True, convert_to_numpy=True)
    e_pred  = model.encode(preds,  normalize_embeddings=True, convert_to_numpy=True)
    sims = (e_trace * e_pred).sum(axis=1)

    df = df.copy()
    # scale from [-1, 1] → [0, 100]
    df["rdc_score"] = (sims + 1) * 50
    return df
