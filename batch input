    # Prescription + safety
    rx_text = ""
    rx_eval = {}
    if diagnosis != "TIMEOUT":
        rx_text = rx_writer.write(diagnosis, summary)
        log_trace(f"Prescription: {rx_text}", "PATIENT")
        rx_eval = rx_safety.check(rx_text, summary) if rx_safety else {"llm_eval": "", "ddi_issues": []}

    # ✅ Collect test safety notes from the conversation
    test_safety_notes = [
        c["content"] for c in convo
        if c["role"] == "system" and isinstance(c.get("content"), str) and "Risk:" in c["content"]
    ]
    test_safety_str = "\n".join(test_safety_notes) if test_safety_notes else ""

    # Determine correctness
    correct = False
    if diagnosis != "TIMEOUT":
        correct = adjudicate_equivalence(diagnosis, scenario.gt_dx, config["moderator_llm_config"])

    # ✅ Return all relevant fields
    return {
        "gt": scenario.gt_dx,
        "diagnosis": diagnosis,
        "correct": bool(correct),
        "turns": turns,
        "consensus_disagree": doctor.last_consensus_disagreement,
        "reasoning_trace": reasoning_trace.strip(),
        "ddx_history": json.dumps(ddx_history),
        "rx": rx_text,
        "rx_safety": (rx_eval.get("llm_eval") or ""),
        "ddi_issues": json.dumps(rx_eval.get("ddi_issues", [])),
        "test_safety": test_safety_str,   # ✅ new line added
    }
