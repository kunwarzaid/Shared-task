/usr/local/lib/python3.10/dist-packages/tqdm/auto.py:21: TqdmWarning: IProgress not found. Please update jupyter and ipywidgets. See https://ipywidgets.readthedocs.io/en/stable/user_install.html
  from .autonotebook import tqdm as notebook_tqdm
ðŸ”¹ Loading multilingual Gemma model...
`torch_dtype` is deprecated! Use `dtype` instead!
Device set to use cuda:0
Processing English dialogue files...

  0% 0/100 [00:00<?, ?it/s]The following generation flags are not valid and may be ignored: ['temperature', 'top_p', 'top_k']. Set `TRANSFORMERS_VERBOSITY=info` for more details.
  1% 1/100 [00:25<41:51, 25.37s/it]
---------------------------------------------------------------------------
JSONDecodeError                           Traceback (most recent call last)
Cell In[1], line 83
     80 file_path = os.path.join(input_dir, file)
     81 with open(file_path, "r") as f:
     82     # combine lines (some files contain multiple dialogue segments)
---> 83     dialogue = "\n".join([json.loads(line)["dialogue"] for line in f])
     85 # Generate outputs
     86 text_summary = generate_summary(dialogue, mode="text")

Cell In[1], line 83, in <listcomp>(.0)
     80 file_path = os.path.join(input_dir, file)
     81 with open(file_path, "r") as f:
     82     # combine lines (some files contain multiple dialogue segments)
---> 83     dialogue = "\n".join([json.loads(line)["dialogue"] for line in f])
     85 # Generate outputs
     86 text_summary = generate_summary(dialogue, mode="text")

File /usr/lib/python3.10/json/__init__.py:346, in loads(s, cls, object_hook, parse_float, parse_int, parse_constant, object_pairs_hook, **kw)
    341     s = s.decode(detect_encoding(s), 'surrogatepass')
    343 if (cls is None and object_hook is None and
    344         parse_int is None and parse_float is None and
    345         parse_constant is None and object_pairs_hook is None and not kw):
--> 346     return _default_decoder.decode(s)
    347 if cls is None:
    348     cls = JSONDecoder

File /usr/lib/python3.10/json/decoder.py:337, in JSONDecoder.decode(self, s, _w)
    332 def decode(self, s, _w=WHITESPACE.match):
    333     """Return the Python representation of ``s`` (a ``str`` instance
    334     containing a JSON document).
    335 
    336     """
--> 337     obj, end = self.raw_decode(s, idx=_w(s, 0).end())
    338     end = _w(s, end).end()
    339     if end != len(s):

File /usr/lib/python3.10/json/decoder.py:353, in JSONDecoder.raw_decode(self, s, idx)
    344 """Decode a JSON document from ``s`` (a ``str`` beginning with
    345 a JSON document) and return a 2-tuple of the Python
    346 representation and the index in ``s`` where the document ended.
   (...)
    350 
    351 """
    352 try:
--> 353     obj, end = self.scan_once(s, idx)
    354 except StopIteration as err:
    355     raise JSONDecodeError("Expecting value", s, err.value) from None

JSONDecodeError: Expecting ',' delimiter: line 2 column 1 (char 127)
